# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T02:17:31+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class GoogleIamAdminV1AuditDataPermissionDelta(BaseModel):
    addedPermissions: Optional[List[str]] = Field(
        None, description='Added permissions.'
    )
    removedPermissions: Optional[List[str]] = Field(
        None, description='Removed permissions.'
    )


class Action(Enum):
    ACTION_UNSPECIFIED = 'ACTION_UNSPECIFIED'
    ADD = 'ADD'
    REMOVE = 'REMOVE'


class GoogleIamV1betaWorkloadIdentityPoolOperationMetadata(BaseModel):
    pass


class GoogleIamV2PolicyOperationMetadata(BaseModel):
    createTime: Optional[str] = Field(
        None,
        description='Timestamp when the `google.longrunning.Operation` was created.',
    )


class GoogleRpcStatus(BaseModel):
    code: Optional[int] = Field(
        None,
        description='The status code, which should be an enum value of google.rpc.Code.',
    )
    details: Optional[List[Dict[str, Any]]] = Field(
        None,
        description='A list of messages that carry the error details. There is a common set of message types for APIs to use.',
    )
    message: Optional[str] = Field(
        None,
        description='A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.',
    )


class GoogleTypeExpr(BaseModel):
    description: Optional[str] = Field(
        None,
        description='Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.',
    )
    expression: Optional[str] = Field(
        None,
        description='Textual representation of an expression in Common Expression Language syntax.',
    )
    location: Optional[str] = Field(
        None,
        description='Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.',
    )
    title: Optional[str] = Field(
        None,
        description='Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.',
    )


class FieldXgafv(Enum):
    field_1 = '1'
    field_2 = '2'


class Alt(Enum):
    json = 'json'
    media = 'media'
    proto = 'proto'


class GoogleIamAdminV1AuditData(BaseModel):
    permissionDelta: Optional[GoogleIamAdminV1AuditDataPermissionDelta] = Field(
        None, description='The permission_delta when when creating or updating a Role.'
    )


class GoogleIamV1BindingDelta(BaseModel):
    action: Optional[Action] = Field(
        None, description='The action that was performed on a Binding. Required'
    )
    condition: Optional[GoogleTypeExpr] = Field(
        None, description='The condition that is associated with this binding.'
    )
    member: Optional[str] = Field(
        None,
        description='A single identity requesting access for a Google Cloud resource. Follows the same format of Binding.members. Required',
    )
    role: Optional[str] = Field(
        None,
        description='Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required',
    )


class GoogleIamV1PolicyDelta(BaseModel):
    bindingDeltas: Optional[List[GoogleIamV1BindingDelta]] = Field(
        None, description='The delta for Bindings between two policies.'
    )


class GoogleIamV2DenyRule(BaseModel):
    denialCondition: Optional[GoogleTypeExpr] = Field(
        None,
        description='The condition that determines whether this deny rule applies to a request. If the condition expression evaluates to `true`, then the deny rule is applied; otherwise, the deny rule is not applied. Each deny rule is evaluated independently. If this deny rule does not apply to a request, other deny rules might still apply. The condition can use CEL functions that evaluate [resource tags](https://cloud.google.com/iam/help/conditions/resource-tags). Other functions and operators are not supported.',
    )
    deniedPermissions: Optional[List[str]] = Field(
        None,
        description='The permissions that are explicitly denied by this rule. Each permission uses the format `{service_fqdn}/{resource}.{verb}`, where `{service_fqdn}` is the fully qualified domain name for the service. For example, `iam.googleapis.com/roles.list`.',
    )
    deniedPrincipals: Optional[List[str]] = Field(
        None,
        description='The identities that are prevented from using one or more permissions on Google Cloud resources. This field can contain the following values: * `principalSet://goog/public:all`: A special identifier that represents any principal that is on the internet, even if they do not have a Google Account or are not logged in. * `principal://goog/subject/{email_id}`: A specific Google Account. Includes Gmail, Cloud Identity, and Google Workspace user accounts. For example, `principal://goog/subject/alice@example.com`. * `deleted:principal://goog/subject/{email_id}?uid={uid}`: A specific Google Account that was deleted recently. For example, `deleted:principal://goog/subject/alice@example.com?uid=1234567890`. If the Google Account is recovered, this identifier reverts to the standard identifier for a Google Account. * `principalSet://goog/group/{group_id}`: A Google group. For example, `principalSet://goog/group/admins@example.com`. * `deleted:principalSet://goog/group/{group_id}?uid={uid}`: A Google group that was deleted recently. For example, `deleted:principalSet://goog/group/admins@example.com?uid=1234567890`. If the Google group is restored, this identifier reverts to the standard identifier for a Google group. * `principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}`: A Google Cloud service account. For example, `principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com`. * `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/{service_account_id}?uid={uid}`: A Google Cloud service account that was deleted recently. For example, `deleted:principal://iam.googleapis.com/projects/-/serviceAccounts/my-service-account@iam.gserviceaccount.com?uid=1234567890`. If the service account is undeleted, this identifier reverts to the standard identifier for a service account. * `principalSet://goog/cloudIdentityCustomerId/{customer_id}`: All of the principals associated with the specified Google Workspace or Cloud Identity customer ID. For example, `principalSet://goog/cloudIdentityCustomerId/C01Abc35`.',
    )
    exceptionPermissions: Optional[List[str]] = Field(
        None,
        description='Specifies the permissions that this rule excludes from the set of denied permissions given by `denied_permissions`. If a permission appears in `denied_permissions` _and_ in `exception_permissions` then it will _not_ be denied. The excluded permissions can be specified using the same syntax as `denied_permissions`.',
    )
    exceptionPrincipals: Optional[List[str]] = Field(
        None,
        description='The identities that are excluded from the deny rule, even if they are listed in the `denied_principals`. For example, you could add a Google group to the `denied_principals`, then exclude specific users who belong to that group. This field can contain the same values as the `denied_principals` field, excluding `principalSet://goog/public:all`, which represents all users on the internet.',
    )


class GoogleIamV2PolicyRule(BaseModel):
    denyRule: Optional[GoogleIamV2DenyRule] = Field(
        None, description='A rule for a deny policy.'
    )
    description: Optional[str] = Field(
        None,
        description='A user-specified description of the rule. This value can be up to 256 characters.',
    )


class GoogleLongrunningOperation(BaseModel):
    done: Optional[bool] = Field(
        None,
        description='If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.',
    )
    error: Optional[GoogleRpcStatus] = Field(
        None,
        description='The error result of the operation in case of failure or cancellation.',
    )
    metadata: Optional[Dict[str, Any]] = Field(
        None,
        description='Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.',
    )
    name: Optional[str] = Field(
        None,
        description='The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.',
    )
    response: Optional[Dict[str, Any]] = Field(
        None,
        description='The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.',
    )


class GoogleIamV1LoggingAuditData(BaseModel):
    policyDelta: Optional[GoogleIamV1PolicyDelta] = Field(
        None,
        description='Policy delta between the original policy and the newly set policy.',
    )


class GoogleIamV2Policy(BaseModel):
    annotations: Optional[Dict[str, str]] = Field(
        None,
        description='A key-value map to store arbitrary metadata for the `Policy`. Keys can be up to 63 characters. Values can be up to 255 characters.',
    )
    createTime: Optional[str] = Field(
        None, description='Output only. The time when the `Policy` was created.'
    )
    deleteTime: Optional[str] = Field(
        None,
        description='Output only. The time when the `Policy` was deleted. Empty if the policy is not deleted.',
    )
    displayName: Optional[str] = Field(
        None,
        description='A user-specified description of the `Policy`. This value can be up to 63 characters.',
    )
    etag: Optional[str] = Field(
        None,
        description='An opaque tag that identifies the current version of the `Policy`. IAM uses this value to help manage concurrent updates, so they do not cause one update to be overwritten by another. If this field is present in a CreatePolicy request, the value is ignored.',
    )
    kind: Optional[str] = Field(
        None,
        description='Output only. The kind of the `Policy`. Always contains the value `DenyPolicy`.',
    )
    name: Optional[str] = Field(
        None,
        description='Immutable. The resource name of the `Policy`, which must be unique. Format: `policies/{attachment_point}/denypolicies/{policy_id}` The attachment point is identified by its URL-encoded full resource name, which means that the forward-slash character, `/`, must be written as `%2F`. For example, `policies/cloudresourcemanager.googleapis.com%2Fprojects%2Fmy-project/denypolicies/my-deny-policy`. For organizations and folders, use the numeric ID in the full resource name. For projects, requests can use the alphanumeric or the numeric ID. Responses always contain the numeric ID.',
    )
    rules: Optional[List[GoogleIamV2PolicyRule]] = Field(
        None,
        description='A list of rules that specify the behavior of the `Policy`. All of the rules should be of the `kind` specified in the `Policy`.',
    )
    uid: Optional[str] = Field(
        None,
        description='Immutable. The globally unique ID of the `Policy`. Assigned automatically when the `Policy` is created.',
    )
    updateTime: Optional[str] = Field(
        None, description='Output only. The time when the `Policy` was last updated.'
    )


class GoogleIamV2ListPoliciesResponse(BaseModel):
    nextPageToken: Optional[str] = Field(
        None,
        description='A page token that you can use in a ListPoliciesRequest to retrieve the next page. If this field is omitted, there are no additional pages.',
    )
    policies: Optional[List[GoogleIamV2Policy]] = Field(
        None, description='Metadata for the policies that are attached to the resource.'
    )
